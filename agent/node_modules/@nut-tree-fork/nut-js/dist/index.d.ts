import { AssertClass } from "@nut-tree-fork/nut-js/dist/lib/assert.class";
import { ClipboardClass } from "@nut-tree-fork/nut-js/dist/lib/clipboard.class";
import { KeyboardClass, KeyboardConfig } from "@nut-tree-fork/nut-js/dist/lib/keyboard.class";
import { MouseClass, MouseConfig } from "@nut-tree-fork/nut-js/dist/lib/mouse.class";
import { ScreenClass, ScreenConfig } from "@nut-tree-fork/nut-js/dist/lib/screen.class";
import providerRegistry from "@nut-tree-fork/nut-js/dist/lib/provider/provider-registry.class";
import { ColorQuery, LineQuery, RGBA, WindowQuery, WordQuery } from "@nut-tree-fork/shared";
export { AssertClass, ClipboardClass, KeyboardClass, KeyboardConfig, MouseClass, MouseConfig, ScreenClass, ScreenConfig, providerRegistry };
export { MatchRequest } from "@nut-tree-fork/shared";
export { MatchResult } from "@nut-tree-fork/shared";
export * from "@nut-tree-fork/provider-interfaces";
export * from "@nut-tree-fork/shared";
export { jestMatchers } from "@nut-tree-fork/nut-js/dist/lib/expect/jest.matcher.function";
export { sleep } from "@nut-tree-fork/nut-js/dist/lib/sleep.function";
export { centerOf, randomPointIn } from "@nut-tree-fork/nut-js/dist/lib/location.function";
export { EasingFunction, linear } from "@nut-tree-fork/nut-js/dist/lib/mouse-movement.function";
export { Window } from "@nut-tree-fork/nut-js/dist/lib/window.class";
export { useLogger, useConsoleLogger, ConsoleLogLevel } from "@nut-tree-fork/nut-js/dist/lib/logging.function";
declare const clipboard: ClipboardClass;
declare const keyboard: KeyboardClass;
declare const mouse: MouseClass;
declare const screen: ScreenClass;
declare const assert: AssertClass;
declare const straightTo: (target: import("@nut-tree-fork/shared").Point | Promise<import("@nut-tree-fork/shared").Point>) => Promise<import("@nut-tree-fork/shared").Point[]>, up: (px: number) => Promise<import("@nut-tree-fork/shared").Point[]>, down: (px: number) => Promise<import("@nut-tree-fork/shared").Point[]>, left: (px: number) => Promise<import("@nut-tree-fork/shared").Point[]>, right: (px: number) => Promise<import("@nut-tree-fork/shared").Point[]>;
declare const getWindows: () => Promise<import("@nut-tree-fork/nut-js/dist/lib/window.class").Window[]>, getActiveWindow: () => Promise<import("@nut-tree-fork/nut-js/dist/lib/window.class").Window>;
declare const loadImage: (parameters: string) => Promise<import("@nut-tree-fork/shared").Image>;
declare const saveImage: (parameters: import("@nut-tree-fork/provider-interfaces").ImageWriterParameters) => Promise<void>;
declare const imageResource: (fileName: string) => Promise<import("@nut-tree-fork/shared").Image>;
declare const singleWord: (word: string) => WordQuery;
declare const textLine: (line: string) => LineQuery;
declare const windowWithTitle: (title: string | RegExp) => WindowQuery;
declare const pixelWithColor: (color: RGBA) => ColorQuery;
export { fetchFromUrl } from "@nut-tree-fork/nut-js/dist/lib/imageResources.function";
export { clipboard, keyboard, mouse, screen, assert, straightTo, up, down, left, right, getWindows, getActiveWindow, loadImage, saveImage, imageResource, singleWord, textLine, windowWithTitle, pixelWithColor };
